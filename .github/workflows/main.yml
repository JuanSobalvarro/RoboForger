name: Build and Release

# This workflow will run on every push to a tag
# with a name that starts with 'v' (e.g., v1.0.0).
on:
  release:
    types: [created]

jobs:
  build-and-release:
    strategy:
      matrix:
        # We will build on these operating systems
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # Choose your target Python version
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build with PyInstaller
        # This step runs the PyInstaller build
        # The output executable is placed in the 'dist' directory.
        run: pyinstaller main.spec

      - name: Rename and Prepare Executable
        id: prepare_exe
        run: |
          # PyInstaller produces different output names and extensions.
          # We normalize them here for consistent naming in the release.
          case ${{ runner.os }} in
            Linux)
              mv dist/RoboForger dist/RoboForger-linux
              echo "asset_path=dist/RoboForger-linux" >> $GITHUB_OUTPUT
              ;;
            macOS)
              mv dist/RoboForger.app dist/RoboForger-macos.zip
              zip -r dist/RoboForger-macos.zip dist/RoboForger.app
              echo "asset_path=dist/RoboForger-macos.zip" >> $GITHUB_OUTPUT
              ;;
            Windows)
              mv dist/RoboForger.exe dist/RoboForger-windows.exe
              echo "asset_path=dist/RoboForger-windows.exe" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: success()
        with:
          # This creates a new release and uploads the built file
          files: ${{ steps.prepare_exe.outputs.asset_path }}
